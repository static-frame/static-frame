[tool.isort]
line_length = 90
force_single_line = true
use_parentheses = true
split_on_trailing_comma = true
include_trailing_comma = true

[tool.ruff]
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "doc/source"
]

line-length = 90
indent-width = 4

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
ignore = ["F841",
    "E741", # ambiguous variable names
    "E731", # assigning lambdas
    "E721", # type-comparison
    "E712", # equality comparisons with True
    "E711", # equality comparison to None
    "E701", # multiple statements
    "F401", # unused imports
    "ICN001", # pandas imports
    "PLR2004", # magic value comparison
    "PLR0915", # too many statements
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0911", # too many return statements
    "PLR1714", # merging comparisons
    "PLR0124", # name compared with itself
    "PLW2901", # loop variable overwritten
    "PLR5501", # use elif
    "PLC0414", # import alias does not rename
    "NPY002", # using legacy NP random
    "RUF005", # unpacking instead of concat
    "RUF023", # sort slots
    "RUF012", # mutable class attrs
    "B018", # useless expression
    "B017", # assert blind Exception
    "B023", # binding loop variable
    "PGH003", # use rule codes
    "RSE102", # exception parenthesis
    "S101", # assert
    "S301", # pickle.loads
    "S106", # possible credentials
    "S608", # SQL injection
    "S603", # untrusted subprocess input
    "S607", # partial exe path
    "S324", # insecure hash
    "S310", # url schemes
    ]
select = [
    "F",   # Pyflakes
    "W",   # "E/W" pycodestyle
    # "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "T10", # flake8-debugger
    "EXE", # flake8-executable
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "RSE", # flake8-raise
    "TCH", # flake8-type-checking
    "PGH", # pygrep-hooks
    "PL",  # Pylint
    "NPY", # NumPy-specific rules
    "RUF", # Ruff-specific rules
    "S",   # flake8-bandit
    # individual rules
    # "S307",   # flake8-bandit [suspicious-eval-usage]
]



[tool.ruff.lint.per-file-ignores]
"doc/build_example.py" = ["E402"]
"static_frame/profile/__main__.py" = ["S605", "S108"]
"doc/animate/animator.py" = ["S102", "S108"]


[tool.pyright]
exclude = [
    "**/__pycache__",
    "doc/**",
    "static_frame/profile",
    "static_frame/core/display_visidata.py",
    "static_frame/test/property",
    "static_frame/test/unit",
    "static_frame/test/integration",
]

typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnboundVariable = "none"
reportInvalidTypeVarUse = false
pythonVersion = "3.11"
pythonPlatform = "Linux"


[tool.mypy]
files = "static_frame/**/*.py"
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
warn_return_any = true
warn_unused_configs = true
disable_error_code = "misc"

[[tool.mypy.overrides]]
module = [
    "IPython",
    "openpyxl",
    "pandas",
    "pyarrow",
    "pyarrow.*",
    "pytest",
    "setuptools",
    "sphinx.*",
    "sphinx_rtd_theme",
    "scipy.*",
    "tables",
    "xarray",
    "xlsxwriter.*",
    "arraymap",
    "frame_fixtures",
    ]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "doc.*",
    "static_frame.profile.*",
    "static_frame.core.display_visidata",
    "static_frame.test.property.*",
    "static_frame.test.unit.*",
    "static_frame.test.integration.*",
    ]
ignore_errors = true

